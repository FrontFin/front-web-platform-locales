{
  "addressWhitelistPage": {
    "addAddress": "",
    "goToAccount": "Go to your <1>{selectedIntegrationName} account</1>",
    "network": "",
    "preview": "",
    "title": "",
    "token": ""
  },
  "authCodeInput": {
    "code": ""
  },
  "binanceConnectAmountInput": {
    "switchFiatCrypto": ""
  },
  "binanceConnectOAuthPage": {
    "amountMustBeWithin": "",
    "amountMustBeWithinErrorMessage": "",
    "buyCrypto": "",
    "closeButton": "",
    "continueTo": "",
    "enterAmount": "",
    "notSupported": "",
    "selectAnotherAccount": "",
    "selectAnotherExchange": "",
    "selectAsset": "",
    "selectCurrency": "",
    "selectNetwork": "",
    "youPay": "",
    "youReceive": ""
  },
  "binanceMfaPage": {
    "add2fa": "",
    "chooseAnotherAccount": "",
    "description": "You must have both an Email & Authenticator App configured as 2FA methods in your <1>Binance</1> account.",
    "ensureConfigured": "",
    "goToSettings": "Click below to go to your <1>Binance</1> security settings",
    "mayNeedReAuthApp": "Please note: you may need to re-authenticate into your Binance account to initiate this transfer when you return to <2>the application</2>.",
    "mayNeedReAuthClient": "Please note: you may need to re-authenticate into your Binance account to initiate this transfer when you return to <2>{clientName}</2>.",
    "openBinance": "",
    "returnToApp": "Return to <1>the application</1> to retry this transfer",
    "returnToClient": "Return to <1>{clientName}</1> to retry this transfer",
    "title": ""
  },
  "binanceResetPasswordPage": {
    "goToBinance": "",
    "securityNote": "",
    "steps": {
      "completeProcess": "",
      "enterEmail": "",
      "goToBinance": "Select <1>Go to Binance.com</1> and you’ll be taken to a Binance login screen.",
      "returnToLogin": ""
    },
    "title": ""
  },
  "bindFacePage": {
    "completedButton": "",
    "linkText": "If you are unable to scan the QR code, please follow this <2><0>link</0></2>.",
    "qrCode": "",
    "return": "",
    "title": ""
  },
  "bindMfaList": {
    "authApp": "",
    "email": "",
    "enabled": "",
    "notEnabled": ""
  },
  "browserContent": {
    "openButtom": ""
  },
  "catalogList": {
    "badges": {
      "api": "",
      "installed": "",
      "linked": ""
    },
    "noResults": "",
    "paymentTitle": "",
    "search": "",
    "title": ""
  },
  "catalogTile": {
    "select": ""
  },
  "categories": {
    "brokerage": "",
    "deFiWallet": "",
    "deFiWalletFull": "",
    "exchange": "",
    "exchangeFull": "",
    "nftMarketplace": "",
    "popular": ""
  },
  "chainSwitch": {
    "monitoringApproval": "",
    "networkChangeDeclined": "",
    "networkChangeDeclinedBody": "",
    "resendNetworkSwitch": "",
    "stayOnNetwork": "",
    "switchingNetwork": ""
  },
  "challengePage": {
    "changeQuestion": "",
    "codeHeader": "",
    "questionHeader": "",
    "securityQuestionInputTitle": "",
    "title": "",
    "verificationCodeInputTitle": ""
  },
  "chooseAccountPage": {
    "linkToApp": "Which of your accounts would you like <1></1> to link to this application",
    "linkToClient": "Which of your accounts would you like <1></1> to link to {clientName}",
    "title": ""
  },
  "common": {
    "availableForTransfer": "",
    "cancel": "",
    "closeCap": "",
    "codeNotCorrent": "",
    "continueCap": "",
    "doneCap": "",
    "failedToLoadTrasferError": "",
    "genericConnectErrorMessage": "",
    "maxCap": "",
    "mesh": "",
    "notFound": "",
    "searchCap": "",
    "securedBy": "Secured by",
    "somethingWentWrong": "",
    "submitCap": "",
    "successTitle": "",
    "tryAgain": ""
  },
  "commonContent": {
    "description": "",
    "monitoring": "",
    "resend": "",
    "title": "Approve the connection<1></1> request in your wallet"
  },
  "connectExternalPageScreen": {
    "connectedTitle": "",
    "failedBody": "",
    "failedTitle": "",
    "notConnectedStep1": "1. Open this link on a <1>desktop</1> device",
    "notConnectedStep2": "",
    "notConnectedTitle": ""
  },
  "connectionDeclinedPage": {
    "connectAnother": ""
  },
  "connectionFailedPage": {
    "defaultError": ""
  },
  "connectionUnavailablePage": {
    "connectAnother": "",
    "installApp": ""
  },
  "countryBlockedPage": {
    "body": "This feature is not yet supported in your<1></1> country. Please check back soon for a<3></3> streamlined deposit experience.",
    "comingSoon": ""
  },
  "currencyBox": {
    "changeCurrency": ""
  },
  "deFiWalletDeclinedConnectionPage": {
    "connectionDeclinedBody": "",
    "connectionDeclinedTitle": "",
    "networkDeclinedBody": "",
    "networkDeclinedTitle": ""
  },
  "deFiWalletDrawerContent": {
    "actionButton": ""
  },
  "defiWalletQrPage": {
    "declinedBody": "",
    "declinedTitle": "",
    "description": "Open {selectedIntegrationName} and scan the<3></3>QR code to link",
    "qrCodeLabel": "",
    "title": ""
  },
  "defiWalletSelectNetworkPage": {
    "declinedBody": "",
    "declineTitle": "",
    "monitoringApproval": "",
    "selectNetwork": "",
    "title": "",
    "whichNetwork": "Which network in your <1>{selectedIntegrationName}</1> wallet<4></4>would you like to link?"
  },
  "defiWalletUnavaialbleConnectionPage": {
    "body": "",
    "title": ""
  },
  "deviceConfirmationScreenPage": {
    "awaitingConfirmation": "",
    "clickOpenApp": "Click <1> Open {selectedIntegrationName} app</1> below",
    "confirmInApp": "",
    "confirmPrompt": "",
    "openApp": "",
    "openAppOnPhone": "",
    "returnHere": "",
    "sendNewRequest": "",
    "title": "",
    "tryAnotherWay": "",
    "verified": "",
    "verifyLoggedIn": ""
  },
  "doneExternalVerifyScreen": {
    "body": "You have successfully verified ownership of your <2>{selectedIntegrationName}</2> wallet.",
    "returnAction": ""
  },
  "donePage": {
    "continueToDeposit": "",
    "continueToPayment": "",
    "continueToPurchase": "",
    "continueToTransfer": "",
    "done": "",
    "linkAnother": "",
    "linkedToClient": "You have successfully linked<1></1><2>{selectedIntegrationName}</2> to <5>{clientName}</5>.",
    "linkedToThisApp": "You have successfully linked<1></1><2>{selectedIntegrationName}</2> to <5>this application</5>."
  },
  "doneTransferDetails": {
    "awaitinApprovalLabel": "",
    "defaultTitle": "",
    "depositTitle": "",
    "onrampTitle": "",
    "paymentTitle": "",
    "steps": {
      "approvedFromCeFiToClient": "",
      "approvedFromCeFiToDestination": "",
      "approvedFromDeFi": "",
      "conversion": "Conversion of <1>{amount}</1> to <4>{currency}</4>.",
      "deposit": "Deposit of <1>{amount}</1> from {paymentMethod} to {selectedIntegrationName}.",
      "purchase": "Purchase of <1>{amount}</1> worth of {symbol} in {selectedIntegrationName}.",
      "requestToTransferPaymentSmartToAddress": "Request to transfer <1>{transferPreviewAmount}</1> from {selectedIntegrationName} via the relay contract {shortSmartContractsAddress}.",
      "requestToTransferPaymentSmartToClient": "Request to transfer <1>{transferPreviewAmount}</1> from {selectedIntegrationName} to {clientName} via the relay contract {shortSmartContractsAddress}.",
      "requestToTransferPaymentToAddress": "Request to transfer <1>{transferPreviewAmount}</1> from {selectedIntegrationName}.",
      "requestToTransferPaymentToClient": "Request to transfer <1>{transferPreviewAmount}</1> from {selectedIntegrationName} to {clientName}.",
      "requestToTransferSmartToAddress": "Request to transfer <1>{transferPreviewAmount}</1> from {selectedIntegrationName} to {shortToAddress} via the relay contract {shortSmartContractsAddress}.",
      "requestToTransferSmartToClient": "Request to transfer <1>{transferPreviewAmount}</1> from {selectedIntegrationName} to {clientName} {shortToAddress} via the relay contract {shortSmartContractsAddress}.",
      "requestToTransferToAddress": "Request to transfer <1>{transferPreviewAmount}</1> from {selectedIntegrationName} to {shortToAddress}.",
      "requestToTransferToClient": "Request to transfer <1>{transferPreviewAmount}</1> from {selectedIntegrationName} to {clientName} {shortToAddress}.",
      "transferPaymentSmartToAddress": "Transfer of <1>{transferPreviewAmount}</1> from {selectedIntegrationName} via the relay contract {shortSmartContractsAddress}.",
      "transferPaymentSmartToClient": "Transfer of <1>{transferPreviewAmount}</1> from {selectedIntegrationName} to {clientName} via the relay contract {shortSmartContractsAddress}.",
      "transferPaymentToAddress": "Transfer of <1>{transferPreviewAmount}</1> from {selectedIntegrationName}.",
      "transferPaymentToClient": "Transfer of <1>{transferPreviewAmount}</1> from {selectedIntegrationName} to {clientName}.",
      "transferSmartToAddress": "Transfer of <1>{transferPreviewAmount}</1> from {selectedIntegrationName} to {shortToAddress} via the relay contract {shortSmartContractsAddress}.",
      "transferSmartToClient": "Transfer of <1>{transferPreviewAmount}</1> from {selectedIntegrationName} to {clientName} {shortToAddress} via the relay contract {shortSmartContractsAddress}.",
      "transferToAddress": "Transfer of <1>{transferPreviewAmount}</1> from {selectedIntegrationName} to {shortToAddress}.",
      "transferToClient": "Transfer of <1>{transferPreviewAmount}</1> from {selectedIntegrationName} to {clientName} {shortToAddress}."
    }
  },
  "doneTransferPage": {
    "awaitingApproval": "",
    "checkDetails": "",
    "depositAddress": "<0>{amountCrypto} ~ {amountFiat}</0><1></1>will be received in {shortAddress}",
    "depositClient": "You will receive<1></1><2>{amountCrypto} ~ {amountFiat}</2><3></3>in {clientName} ({shortAddress})",
    "goToIntegrationToApprove": "Please go to <1>{selectedIntegrationName}</1> to approve this transfer.",
    "paymentInitiated": "You have initiated a payment of <1></1><2>{amountCrypto}</2> <4></4>to {clientName}",
    "waiting": ""
  },
  "doneVerifyPage": {
    "alreadyVerifiedBody": "Ownership of address {address} has already been verified for <4>{clientName}</4>.",
    "continueToTransfer": "",
    "returnToClient": "",
    "titleAllSet": "",
    "verifiedBody": "You have successfully verified ownership of address {address} for <4>{clientName}</4>."
  },
  "drawer": {
    "close": ""
  },
  "emailVerificationPage": {
    "emailRecievedLoading": "",
    "expiredError": "",
    "forwardingEmail": "",
    "sendEmailButton": "",
    "steps": {
      "checkInbox": "",
      "doNotClick": "<0>DO NOT</0> click the confirmation button in the email.",
      "forwardEmail": ""
    },
    "stillWaitingLoading": "",
    "title": "",
    "warningTitle": ""
  },
  "errorPage": {
    "title": ""
  },
  "exitPage": {
    "body": "",
    "continue": "",
    "exit": "",
    "title": ""
  },
  "externalDirectMobileWallet": {
    "actionRefusedError": "",
    "actionRefusedRetryText": "",
    "actionRefusedText": "",
    "connectionWalletAction": "",
    "continueInApp": "",
    "defaultAction": "",
    "processingError": "",
    "processingText": "",
    "sessionNotFoundError": "",
    "signedMessageAction": "",
    "transactionAction": "",
    "tryAgainText": ""
  },
  "externalHardwareWalletInitial": {
    "invalidCode": ""
  },
  "externalHardwareWalletMainPage": {
    "mobileBody": "This experience must be completed on a <1>desktop</1> device to connect your hardware wallet.",
    "mobileTitle": ""
  },
  "externalInitialScreen": {
    "title": "Enter the one time code <1></1>displayed on your mobile device"
  },
  "externalTransferCallbackPage": {
    "continue": "",
    "transferRequested": "Transfer requested<1></1>Please return to {deepLink}",
    "updatingTransfer": ""
  },
  "facePage": {
    "completedButton": "",
    "desktopStep1": "",
    "desktopStep2": "",
    "mobileStep1": "",
    "mobileStep2": "Click <1>Open {selectedIntegrationName} app</1> to open your app and complete face verification.",
    "mobileStep3": "",
    "openApp": "",
    "reopenApp": "",
    "title": ""
  },
  "fields": {
    "authToken": "",
    "challengeCode": "",
    "mfaCode": "",
    "password": "",
    "phone": "",
    "tradePin": "",
    "username": ""
  },
  "fullScreenSpinner": {
    "linking": "",
    "loading": "Still working..."
  },
  "fundingMethodFees": {
    "fee": {
      "conversion": "",
      "deposit": "",
      "purchase": "",
      "withdrawal": ""
    },
    "info": {
      "conversion": "",
      "purchase": "",
      "withdrawal": ""
    }
  },
  "fundingMethodsList": {
    "buyingPower": "",
    "cryptocurrencyBalance": "",
    "noneSelected": "",
    "paymentMethodDepositUsage": "",
    "stablecoinConversion": "",
    "withAdditional_one": "",
    "withAdditional_many": "",
    "withAdditional_other": ""
  },
  "fundingOptionUnavailabilityReason": {
    "buyingPowerUsageNotSupported": "",
    "coveredByExistingCryptocurrencyBalance": "",
    "coveredByOtherFundingOptions": "",
    "currencyNotSupported": "",
    "depositAmountLimitExceeded": "",
    "depositCountLimitReached": "",
    "depositsNotSupported": "",
    "instantDepositLimitExceeded": "",
    "instantDepositsNotSupported": "",
    "insufficientBalance": "",
    "maximumDepositLimitViolated": "",
    "minimumDepositLimitViolated": "",
    "paymentMethodTypeNotSupported": "",
    "unknown": ""
  },
  "fundingPage": {
    "activatePaymentMethod": "",
    "aproximateFiat": "",
    "balanceAmount": "",
    "balanceAmountWithConversion": "",
    "balances": "",
    "balanceWithAproximateFiat": "",
    "buyingPower": "",
    "changeAmount": "",
    "changePreferredPaymentMethod": "",
    "changePreferredToken": "",
    "cryptoConversion": "",
    "description": "",
    "instantCashAvailable": "",
    "linkedPaymentMethods": "",
    "noPaymentMethods": "",
    "noTokensAvailableForConversion": "",
    "save": "",
    "selectFundingMethodAvailablity": "",
    "selectFundingMethods": "Please select funding method(s) to transfer <2>{formatCryptocurrency(\r\n                    transferPreview.amount,\r\n                    transferPreview.symbol\r\n                  )} ~ {formatUsd(transferPreview.amountInFiat)}</2>.",
    "selectOtherHoldings": "",
    "symbolBalance": "",
    "title": ""
  },
  "gasFeeUpdateDrawerContent": {
    "approvePayment": "",
    "cancel": "",
    "description": "",
    "ifDontComplete": "",
    "newEstimate": "",
    "originalEstimate": "",
    "title": ""
  },
  "generateKeyPage": {
    "done": "",
    "establishedInClient": "You have successfully established uninterrupted updates in<1></1><2>{clientName}</2>.",
    "establishedInThisApp": "You have successfully established uninterrupted updates in<1></1><2>this application</2>.",
    "linkedToInClient": "You have successfully linked<1></1><2>{selectedIntegrationName}</2> to <5>{clientName}</5>.",
    "linkedToThisApp": "You have successfully linked<1></1><2>{selectedIntegrationName}</2> to <5>this application</5>.",
    "nextStep": "Next we'll create a key for <2>uninterrupted updates</2> so you don't have to log back in",
    "tempAccess": ""
  },
  "handleExternalTransferPage": {
    "detailButton": "",
    "error": "",
    "loadingLabel": "",
    "networkConfirmations": "",
    "notInitiatedUntilApproved": "",
    "recievedDetails": "You will receive <1>{amountStr}</1> in {clientName} ({shortAddress})",
    "requestRecieved": "",
    "revolutApproveInfo": "",
    "transactionComplete": ""
  },
  "handleOauthPage": {
    "error": ""
  },
  "hardwareWalletDrawerContent": {
    "body": "",
    "connectAction": ""
  },
  "ineligibleReason": {
    "amountBelowMinimumDescription": "",
    "balanceBelowMinimumDescription": "",
    "belowMinimum": "",
    "belowRequestedAmountDescription": "",
    "gasFeeAssetBalanceNotEnoughDescription": "",
    "insufficientBalance": "",
    "insufficientBalanceDescription": "",
    "notEligible": "",
    "notEligibleDescription": "",
    "notSupportedByInstitution": "",
    "notSupportedForTransferBySource": "",
    "nyCoinbaseUserRestrictions": "",
    "symbolDoesNotMatch": "",
    "symbolDoesNotMatchDescription": ""
  },
  "initialLedgerScreen": {
    "title": ""
  },
  "initialScreen": {
    "accountTitle": "",
    "clientNameAccountTitle": "",
    "clientNameWalletTitle": "",
    "walletTitle": ""
  },
  "initialSteps": {
    "agreement": "By selecting “Continue” you agree to the <1></1><2>End user Terms and Conditions</2>",
    "credentials": "",
    "encryption": "",
    "explicitApproval": "",
    "thirdParty": ""
  },
  "initialVerifyPage": {
    "drawerTitle": "Approve the signature request<1></1> in your wallet",
    "item1Body": "",
    "item1Title": "",
    "item2Body": "",
    "item2Title": "",
    "monitoringLabel": "",
    "resendAction": "",
    "title": "",
    "verifyAction": "",
    "verifyingLabel": ""
  },
  "ipWhiteListPage": {
    "addIp": "",
    "clickOnEdit": "",
    "copyIpTitle": "",
    "description": "<0>Binance</0> requires API users to whitelist IP addresses to ensure the legitimacy of trade and transfer requests.",
    "findKey": "",
    "openLink": "Open <2><0>Binance API Management</0></2>",
    "requirementsTitle": "",
    "title": ""
  },
  "kycDonePage": {
    "successMessage": ""
  },
  "kycInitialPage": {
    "description": "",
    "steps": {
      "completeVerification": "",
      "navigateCrypto": "",
      "openAccount": "",
      "returnToScreen": ""
    },
    "title": "",
    "verifiedButton": ""
  },
  "kycPendingPage": {
    "connectAnother": "",
    "description": "Identity verification may take <1>1 - 3 business days.</1> Once verification is complete and transfers are enabled in your account, you may return here to complete this transaction.",
    "title": ""
  },
  "kycRobinhoodPage": {
    "clickContinue": "Click <1>Continue</1> to open {selectedIntegrationName}.",
    "clickContinueAfterActivated": "After you have activated crypto transfers in {selectedIntegrationName}, click below to <5>Continue</5> with your transfer.",
    "completeVerification": "",
    "connectAnother": "",
    "note": "Please note: you may need to log back into your {selectedIntegrationName} account to initiate this transfer when you return.",
    "return": "",
    "title": ""
  },
  "ledgerBluetooth": {
    "step1": "Select your device from the <1>Bluetooth</1> window",
    "step2": ""
  },
  "ledgerConnection": {
    "bluetoothConnect": "",
    "connectionQuestion": "",
    "usbConnect": ""
  },
  "ledgerDeviceConnected": {
    "clientVerifyLabel": "",
    "clientVerifyText": "",
    "secureLabel": "",
    "secureText": "",
    "title": ""
  },
  "ledgerError": {
    "incorrectAppError": "",
    "lockedError": "",
    "noDeviceError": "",
    "notSelectedError": "",
    "rejectError": "",
    "title": "",
    "transportError": "",
    "transportLockedError": "",
    "unexpectedError": "",
    "unknownError": ""
  },
  "ledgerOpenApp": {
    "title": ""
  },
  "ledgerSignError": {
    "body": "",
    "title": ""
  },
  "ledgerSignMessage": {
    "rippleBody": "",
    "title": ""
  },
  "ledgerUSB": {
    "step1": "Select your device from the <1>USB</1> window",
    "step2": ""
  },
  "loginDeviceVerifiedPage": {
    "loginButton": "",
    "subtitle": "",
    "title": ""
  },
  "mfaError": {
    "default": ""
  },
  "mfaHint": {
    "email": "",
    "phone": "",
    "sandbox": "",
    "totp": ""
  },
  "mfaInstructionsText": {
    "email": "Enter the one-time code that <2>{selectedIntegrationName}</2> has sent to your email.",
    "paymentFlow": "",
    "phone": "Enter the one-time code that <2>{selectedIntegrationName}</2> has sent to your phone.",
    "totp": "Enter the one-time code provided by the authenticator app you have linked to <1>{selectedIntegrationName}</1>.",
    "tradingPin": "Please enter the trading PIN code associated with your <2>{selectedIntegrationName}</2> account.",
    "transferFlow": "",
    "twoFactor": "Enter the code provided by the two-factor authentication method you have configured in your <1>{selectedIntegrationName}</1> account."
  },
  "mfaPage": {
    "enterCode": "Enter your one-time code to confirm it’s<1></1>really you trying to log in.",
    "enterPin": "",
    "title": "",
    "verify": ""
  },
  "mfaSetupPage": {
    "emailButton": "",
    "emailSubtitle": "Click the button below to add an email to your <2>{selectedIntegrationName}</2> account.",
    "keyGenerationBody": "For your security, <1>{selectedIntegrationName} </1> requires that users have email and authenticator app MFA methods enabled to generate keys",
    "keyGenerationTitle": "",
    "totpButton": "",
    "totpSubtitle": "Click the button below to add an authenticator app to your <2>{selectedIntegrationName}</2> account.",
    "withdrawalBody": "For your security, <1>{selectedIntegrationName} </1> requires that users have email and authenticator app MFA methods enabled to withdraw assets",
    "withdrawalTitle": ""
  },
  "mfaSuccessPage": {
    "addAuthApp": "Click the button below to add an authenticator app to your <2>{selectedIntegrationName}</2> account.",
    "emailTitle": "You've successfully linked your email to your <2>{selectedIntegrationName}</2> account.",
    "proceed": "",
    "proceedKey": "",
    "proceedTransfer": "",
    "setUpApp": "",
    "totpTitle": "You've successfully linked an authenticator app to your <2>{selectedIntegrationName}</2> account."
  },
  "mfaTitle": {
    "default": "",
    "email": "",
    "phone": ""
  },
  "mfaVerificationPage": {
    "checkEmail": "First, let's verify your identity.<1></1>Please, check your email for a one-time verification code sent from <4>{selectedIntegrationName}</4>.",
    "checkSms": "First, let's verify your identity.<1></1>Please, check your phone for a one-time verification code sent from <4>{selectedIntegrationName}</4> sent by SMS.",
    "confirmApp": "",
    "confirmEmail": "",
    "enterCode": "",
    "enterCodeFromEmail": "Please enter the 6-digit code that <2>{selectedIntegrationName}</2> has sent<4></4>to your email.",
    "enterTotp": "Please enter the 6-digit code from your<1></1>authenticator app",
    "firstEnterTotp": "First, let's verify your identity.<1></1>Please, enter the one-time code from the authenticator app you have linked to <3>{selectedIntegrationName}</3>.",
    "securityVerification": ""
  },
  "mobileAppLink": {
    "awaitingConfirmation": "",
    "openAppButton": "",
    "steps": {
      "authorize": "Click <1>Authorize</1> on the confirmation page.",
      "openApp": "Click <1>Open {selectedIntegrationName} app</1> below.",
      "return": ""
    }
  },
  "mobileContent": {
    "actionButton": ""
  },
  "navHeader": {
    "close": "",
    "goBack": ""
  },
  "nonOAuthPermissionsPage": {
    "allow": "",
    "movingFunds": "",
    "titleWithClient": "{clientName} <2></2> Permissions",
    "titleWithoutClient": "This application`s <1></1> Permissions",
    "transactionRequest": "",
    "viewActivity": "",
    "wontAllow": ""
  },
  "oAuthBrokerPage": {
    "monitoring": "",
    "reopenButton": "",
    "subtitle": "",
    "title": "Continue on <1></1> {selectedIntegrationName} window"
  },
  "oauthErrorPage": {
    "description": "",
    "selectAnotherAccount": "",
    "selectAnotherDescription": ""
  },
  "oAuthMessageListener": {
    "clientUsesMesh": "",
    "description": "",
    "monitoring": "",
    "open": "",
    "reopen": "",
    "title": "",
    "willFacilitate": ""
  },
  "onRampLoadingScreen": {
    "approveTransferStep": {
      "client": "You approve the transfer of <1>{amount}</1> from {selectedIntegrationName} to {clientName}.",
      "destination": "You approve the transfer of <1>{amount}</1> from {selectedIntegrationName} to the destination."
    },
    "buyingPowerPurchase": "Purchase of <1>{amount}</1> worth of {symbol} <5>(~ {amountInCrypto})</5> in {selectedIntegrationName}.",
    "conversionStep": "Conversion of <1>{amount}</1> to <4>{currency}</4>.",
    "depositTitle": "",
    "description": "",
    "existingCryptocurrencyBalance": {
      "approveClient": "",
      "approveDestination": "",
      "transfer": "Transfer of <1>{amount}</1> from {selectedIntegrationName} to {clientName}.",
      "transferHideClient": "Transfer of <1>{amount}</1> from {selectedIntegrationName}.",
      "transferHideClientWithAddress": "Transfer of <1>{amount}</1> from {selectedIntegrationName} to {address}.",
      "transferSmartDeposit": "Transfer of <1>{amount}</1> from {selectedIntegrationName} to {clientName} via a relay contract.",
      "transferSmartDepositHideClient": "Transfer of <1>{amount}</1> from {selectedIntegrationName} via a relay contract.",
      "transferSmartDepositHideClientWithAddress": "Transfer of <1>{amount}</1> from {selectedIntegrationName} to {address} via a relay contract.",
      "transferSmartDepositWithAddress": "Transfer of <1>{amount}</1> from {selectedIntegrationName} to {clientName} {address} via a relay contract.",
      "transferWithAddress": "Transfer of <1>{amount}</1> from {selectedIntegrationName} to {clientName} {address}."
    },
    "onrampTitle": "",
    "paymentMethodDepositUsage": "Deposit of <1>{amount}</1> from {paymentMethod} to {selectedIntegrationName}.",
    "paymentTitle": "",
    "transactionTitle": "",
    "tryAgain": ""
  },
  "passwordPage": {
    "fieldError": "",
    "fieldErrorWithIntegration": "",
    "forgotPassword": "",
    "tabs": {
      "email": "",
      "mobileApp": "",
      "phone": "",
      "qrCode": ""
    },
    "title": ""
  },
  "paymentMethods": {
    "bankAccount": "",
    "card": "",
    "default": "",
    "digitalWallet": ""
  },
  "paymentUpdateDrawerContent": {
    "cancel": "",
    "clickToPay": "",
    "description": "",
    "ifDontComplete": "",
    "onYourAccount": "",
    "title": "",
    "topUp": ""
  },
  "payPalConnectOAuthPage": {
    "close": "",
    "continue": "",
    "enterAmount": "",
    "notSupported": "",
    "selectAnotherAccount": "",
    "selectAnotherExchange": "",
    "selectNetwork": "",
    "title": ""
  },
  "previewTransfer": {
    "allFeesIncluded": "",
    "amountWithFiat": "",
    "approveTransferRequest": "Approve the transfer request<1></1>in your wallet",
    "changeAmount": "",
    "depositTitle": "",
    "dustLeft": "",
    "estimatedGasFee": "",
    "estimatedGasFeeHint": "",
    "from": "",
    "fundingWith": "",
    "institutionTransferFee": "",
    "institutionTransferFeeHint": "",
    "maxAmount": "Your account can fund a maximum of <2>{networkMaxAmount}</2>. Would you like to adjust your transfer to this amount?",
    "monitoring": "",
    "network": "",
    "onrampTitle": "",
    "payingWith": "",
    "paymentTitle": "",
    "proceed": "",
    "processingFee": "",
    "processingFeeHint": "",
    "receive": "",
    "resendTransferRequest": "",
    "seconds": "",
    "symbolBalance": "",
    "to": "",
    "total": "",
    "transferDeclined": "",
    "transferDeclinedBody": "",
    "transferTitle": "",
    "youMayReceiveLess": ""
  },
  "privacyComponent": {
    "content": ""
  },
  "qrCodePassword": {
    "expired": "",
    "generateNew": "",
    "qrCodeLabel": "",
    "scanText": "Scan this code with your Binance app <1></1> to log in instantly."
  },
  "receiveAmountInput": {
    "onNetwork": ""
  },
  "revolutConnectOAuthPage": {
    "amountMustBeAtLeast": "",
    "continue": "",
    "enterAmount": "",
    "selectAsset": "",
    "selectNetwork": ""
  },
  "robinhoodConnectOAuthPage": {
    "continue": "",
    "enterAmount": "",
    "selectAsset": "",
    "selectNetwork": ""
  },
  "selectCryptoFundingPage": {
    "title": ""
  },
  "selectHoldingPage": {
    "binanceDirectNoAssetsBody1": "",
    "binanceDirectNoAssetsBody2": "",
    "cannotFundBody": "",
    "cannotFundTitle": "",
    "connectAnotherButton": "",
    "defaultTitle": "",
    "depositTitle": "",
    "ineligibleAssets": "",
    "loading": "",
    "noAssetsTitle": "",
    "noEligibleAssetsTitle": "",
    "notEnoughtBody": "",
    "notEnoughtTitle": "",
    "otherEligible": "",
    "paymentTitle": "",
    "returnToAppButton": "",
    "returnToClientButton": "",
    "spotAccountsBody": "",
    "topUpButton": "",
    "unableTransferError": ""
  },
  "selectItem": {
    "label": ""
  },
  "selectNetworkPage": {
    "ineligibleNetwork": ""
  },
  "selectNetworkScreen": {
    "title": ""
  },
  "selectWalletScreen": {
    "ledgerDevice": "",
    "ledgerLiveMobileApp": "",
    "title": ""
  },
  "sessionExpired": {
    "title": ""
  },
  "sessionInfo": {
    "text": "If you have questions, please report this with session ID <2>{sessionId}</2>."
  },
  "setupAuthAppPage": {
    "alternativeText": "",
    "copyCodeTitle": "",
    "downloadStep": "Download the <1>Google Authenticator app</1> from Google Play or the App Store",
    "nextButton": "",
    "qrCodeAlt": "",
    "scanStep": "Add {selectedIntegrationName} to your authenticator app by <4>scanning the QR code</4>",
    "title": ""
  },
  "setupEmailPage": {
    "description": "Enter your email address.<1></1><2>{selectedIntegrationName}</2> will use this email to send you confirmation codes when you're performing certain actions in your account.",
    "emailTitle": "",
    "enterError": "",
    "title": ""
  },
  "termsAndConditionsPage": {
    "paragraph1": "Mesh Connect, Inc. (the <1>“Company”</1>) is a technology provider that makes a communications tool (the <3>“Tool”</3>) which helps facilitate certain functionality of the third-party service you are using (the <5>“End User Service”</5>). Such functionality is intended to enable you to communicate with your third-party accounts and wallets (<7>“Connected Accounts”</7>) through the End User Service, including sending instructions that you wish to execute.",
    "paragraph10": "The arbitration will be administered by the American Arbitration Association under its Consumer Arbitration Rules, as amended by these terms. The Consumer Arbitration Rules are available online at <2>https://www.adr.org/sites/default/files/Consumer%20Rules.pdf</2>. The arbitrator will conduct hearings, if any, by teleconference or videoconference, rather than by personal appearances, unless the arbitrator determines upon request by you or by us that an in-person hearing is appropriate. Any in-person appearances will be held at a location which is reasonably convenient to both parties with due consideration of their ability to travel and other pertinent circumstances. If you and the Company are unable to agree on a location, such determination should be made by the AAA or by the arbitrator. The arbitrator’s decision will follow these terms and will be final and binding. The arbitrator will have authority to award temporary, interim or permanent injunctive relief or relief providing for specific performance of these terms, but only to the extent necessary to provide relief warranted by the individual claim before the arbitrator. The award rendered by the arbitrator may be confirmed and enforced in any court having jurisdiction thereof. Notwithstanding any of the foregoing, nothing in these terms will preclude you from bringing issues to the attention of federal, state or local agencies and, if the law allows, they can seek relief against us for you.",
    "paragraph11": "These terms constitute the complete agreement between you and the Company relating to their subject matter, and supersede all prior representations or agreements, whether oral or written, with respect to such matters. If any term is unenforceable under applicable law, then that term is hereby amended so as to comply with the law, while preserving to the maximum extent possible the intent of the original term. Any term that cannot be so amended will be severed and all remaining terms will remain in effect. You acknowledge and agree that Company’s service providers are intended third-party beneficiaries of these terms. By accepting these terms and conditions or utilizing the Tool, you hereby agree that you are bound by the terms and conditions of this agreement.",
    "paragraph2": "You acknowledge and agree that certain functionality of the End User Service is based upon the Tool; that your use of such functionality is at your instruction; that neither the Company nor its service providers make available brokerage services or engage in payment processing; and that neither the Company nor its service providers have any responsibility or liability for the End User Service or any Connected Account, or the terms, policies, acts or omissions of their providers.",
    "paragraph3": "You represent and warrant that you have all rights and consents necessary to connect to and access each Connected Account through such functionality, including the right to provide the Company and its service providers with your account login credentials, wallet addresses, and/or any of your account or your personal information for each Connected Account. You hereby authorize the Company and its service providers to transmit instructions as well as information, data and other materials between the End User Service and each Connected Account, and you acknowledge and agree that the Company and its service providers have no responsibility or liability for the execution of any such instructions, or for any such materials (including their accuracy, timeliness or completeness).",
    "paragraph4": "You acknowledge that you have read the Company’s Privacy Policy, which is available at <2>https://meshconnect.com/privacy-policy</2>, and agree that, by using the Tool, you consent to the Company’s use of your Personal Information as defined and set forth in the Privacy Policy.",
    "paragraph5": "The Tool is made available on an “AS IS” and “AS AVAILABLE” basis, with all faults and without any representation or warranty of any kind. The Company does not make any representations or warranties with respect to the Tool, express or implied, including any warranty of merchantability, fitness for a particular purpose or non-infringement.",
    "paragraph6": "IN NO EVENT WILL THE COMPANY OR ITS SERVICE PROVIDERS BE LIABLE, WHETHER IN CONTRACT, WARRANTY, TORT (INCLUDING NEGLIGENCE), PRODUCT LIABILITY, STRICT LIABILITY OR OTHER THEORY, FOR ANY INDIRECT, INCIDENTAL, SPECIAL OR CONSEQUENTIAL DAMAGES IN CONNECTION WITH THE USE (OR INABILITY TO USE) THE TOOL, END USER SERVICE OR ANY CONNECTED ACCOUNT, INCLUDING ANY INSTRUCTIONS OR MATERIALS TRANSMITTED USING FUNCTIONALITY ENABLED BY THE TOOL. THE FOREGOING LIMITATIONS, EXCLUSIONS AND DISCLAIMERS SHALL APPLY TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, EVEN IF ANY REMEDY FAILS OF ITS ESSENTIAL PURPOSE. WITHOUT LIMITING THE FOREGOING, THE COMPANY’S AND ITS SERVICE PROVIDERS’ AGGREGATE LIABILITY IN CONNECTION WITH THE TOOL WILL NOT EXCEED TEN DOLLARS.",
    "paragraph7": "You will defend, indemnify and hold harmless the Company and its directors, officers, employees, licensors, contractors and representatives from and against any third-party claims, actions, suits, investigations or proceedings, and any losses, liabilities, damages, costs and expenses arising out of or related to your use (or misuse) of the Tool, the End User Service and/or any Connected Account.",
    "paragraph8": "The Company may change these terms at any time. Your continued use of any functionality enabled by the Tool after any such changes constitutes your acceptance of the updated terms.",
    "paragraph9": "These terms will be governed by the laws of the State of Delaware, excluding its choice of law principles. Except for disputes that qualify for small claims court, all disputes arising out of or related to these terms or any aspect of the relationship between you and the Company, whether based in contract, tort, statute, fraud, misrepresentation or any other legal theory, will be resolved through final and binding arbitration before a neutral arbitrator instead of in a court by a judge or jury and you agree that the Company and you are each waiving the right to trial by a jury. Such disputes include, without limitation, disputes arising out of or relating to interpretation or application of this arbitration provision, including the enforceability, revocability or validity of the arbitration provision or any portion of the arbitration provision. All such matters shall be decided by an arbitrator and not by a court or judge. You agree that any arbitration under these terms will take place on an individual basis; class arbitrations and class actions are not permitted, and you are agreeing to give up the ability to participate in a class action.",
    "title": "{shortName} End User<2></2>Terms and Conditions"
  },
  "transferCanceledPage": {
    "title": "",
    "titlePayment": "",
    "willRemain": "",
    "yourBalance": ""
  },
  "transferDeviceConfirmation": {
    "awaitingConfirmation": "",
    "confirmButton": "",
    "description": "",
    "desktopSteps": {
      "confirm": "",
      "openApp": "",
      "return": ""
    },
    "mobileSteps": {
      "clickOpen": "Click <1>Open {selectedIntegrationName} app</1> below",
      "verifyLogin": "",
      "verifyTransfer": ""
    },
    "openApp": "",
    "sendNewRequest": "",
    "title": "",
    "tryAnother": ""
  },
  "transferEmailApprovalConfirmation": {
    "approve": "Click <1>Approve</1> in the confirmation page.",
    "approveOrCancel": "Click <1>Approve or Cancel Withdrawal</1> in the email.",
    "confirmButton": "",
    "description": "",
    "return": "",
    "title": ""
  },
  "transferErrorPage": {
    "defaultError": ""
  },
  "transferFacePage": {
    "clickOpenApp": "Click <1>Open {selectedIntegrationName} app</1> to open your app and complete face verification.",
    "completeMobile": "",
    "confirmCompleted": "",
    "openApp": "",
    "reopenApp": "",
    "return": "",
    "returnContinue": "",
    "scanQR": "",
    "title": ""
  },
  "transferMfaPage": {
    "title": "",
    "verify": ""
  },
  "transferPreviewErrorPage": {
    "aboveMaximum": "",
    "belowMinimum": "",
    "connectAnotherAccount": "",
    "connectDifferent": "",
    "insufficientBalanceError": "",
    "insufficientFunds": "",
    "unknownError": ""
  },
  "transferSteps": {
    "approveTransfer": "",
    "approveTransferDeFi": "",
    "approveTransferToDestination": "",
    "convertAmount": "",
    "depositAmount": "",
    "purchaseAmount": "Purchase of <2>{formatCurrency(\r\n                fundingOption.usedAmountTotal?.amountInFiat,\r\n                fundingOption.usedAmountTotal?.fiatSymbol\r\n              )}</2> worth of {fundingOption.usedAmountTotal?.cryptocurrencySymbol} in {integrationName}.",
    "showLess": "",
    "showMore": "",
    "title": "",
    "transferAmount": "Transfer of <1>{cryptoAmount}</1> from {integrationName} to {hideClient ? '' : clientName} {targetAddress}.",
    "transferAmountSmartDeposit": "Transfer of <1>{cryptoAmount}</1> from {integrationName} to {hideClient ? '' : clientName} {targetAddress}via a relay contract."
  },
  "transferUpdateDrawerContent": {
    "approveTransfer": "",
    "cancel": "",
    "description": "",
    "ifDontComplete": "",
    "onYourAccount": "",
    "title": "",
    "youWillReceive": ""
  },
  "transferWithdrawalAddressConfirmation": {
    "checkInbox": "",
    "clickConfirm": "Click <1>Confirm address</1> in the email.",
    "confirmedButton": "",
    "return": "",
    "title": ""
  },
  "trezorContext": {
    "failedGetBTCError": "",
    "failedGetETHError": "",
    "failedSignBTCError": "",
    "failedSignETHError": "",
    "unknownError": ""
  },
  "trezorDeviceConnected": {
    "clientVerifyLabel": "",
    "secureLabel": "",
    "secureText": "",
    "signText": "",
    "title": "",
    "verifyingLabel": ""
  },
  "trezorError": {
    "connectionDeclinedBody": "",
    "connectionDeclinedTitle": "",
    "signatureDeclinedBody": "",
    "signatureDeclinedTitle": ""
  },
  "trezorInitial": {
    "clientVerifyLabel": "",
    "clientVerifyText": "",
    "connectingLabel": "",
    "secureLabel": "",
    "secureText": ""
  },
  "verifyAddressAndNetworkErrorPage": {
    "body": "{clientName} would like you to verify ownership of <3>{requestedNetworkName}</3> address <6>{truncatedRequestedAddress}</6>. That address is not associated with the connected wallet. Please connect another wallet.",
    "connectAnotherAction": "",
    "title": ""
  },
  "verifyError": {
    "body": "",
    "title": ""
  },
  "verifyErrorPage": {
    "body": "",
    "title": ""
  },
  "wallectConnect": {
    "noActiveSessionError": "",
    "unknownError": ""
  },
  "walletDoneScreen": {
    "continueMessage": "",
    "successMessage": ""
  },
  "withdrawalLockedErrorPage": {
    "another": "",
    "title": ""
  }
}
